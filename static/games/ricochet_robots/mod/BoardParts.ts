//             Target               ||       Map
//                                  ||
//   1 - Yellow       1 - Moom      ||   0 - wall
//   2 - Red          2 - Sun       ||   1 - empty
//   3 - Blue         3 - Saturn    ||  -1 - center
//   4 - Green        4 - Star      ||
//   5 - wild                       ||
//   Ex. 44 - Green Star            ||
//
//==========================================================

// const template = [
//     [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
//     [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,-1 ],
// ]

// =====================================================================

// Map 1

const map1A = [
    [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 0,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   0,11,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,32,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   23,0,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   44,0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,-1 ],
]

const map1B = [
    [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 0,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   44,0,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1 ],

    [ 0, 1,   0,23,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,11,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   32,0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,-1 ],
]

// Map 2

const map2A = [
    [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 0,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   0,22,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   41,0,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   34,0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,13 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,-1 ],
]

const map2B = [
    [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 0,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   34,0,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   41,0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,22 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],

    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   0,13,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,-1 ],
]

// Map 3

const map3A = [
    [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 0,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   14,0,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1 ],

    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   0,42,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   33,0,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   0,21,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,-1 ],
]

const map3B = [
    [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
    [ 0, 1,   1, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   0,21,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   42,0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   14,0,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   0,33,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,-1 ],
]

// Four
const map4A = [
    [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 0,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   24,0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   0,43,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,12,   1, 1 ],

    [ 0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   31,0,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   55,0,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1,   0,-1 ]
]

const map4B = [
    [ 0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 0,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,31,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   12,0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,43,   1, 1,   1, 1 ],

    [ 0, 1,   1, 1,   24,0,   1, 1,   1, 1,   1, 1,   1, 1,   55,0 ],
    [ 0, 1,   1, 1,   0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],

    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1 ],

    [ 0, 0,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0, 0 ],
    [ 0, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   1, 1,   0,-1 ],
]


export class BoardPart {
    matrix: number[][];
    constructor(matrix: number[][]) {
        this.matrix = matrix;
    }

    rotateClockwise(): BoardPart {
        const N = this.matrix.length;
        const rotated = Array.from({ length: N }, () => new Array(N).fill(0));
        for (let i = 0; i < N; i++) {
            for (let j = 0; j < N; j++) {
                rotated[j][N - 1 - i] = this.matrix[i][j];
            }
        }
        this.matrix = rotated;
        return this;
    }

    rotateCounterclockwise() : BoardPart {
        const N = this.matrix.length;
        const rotated = Array.from({ length: N }, () => new Array(N).fill(0));
        for (let i = 0; i < N; i++) {
            for (let j = 0; j < N; j++) {
                rotated[N - 1 - j][i] = this.matrix[i][j];
            }
        }
        this.matrix = rotated;
        return this;
    }

    static joinHorizontally(left: BoardPart, right: BoardPart): BoardPart {
        if (left.matrix.length !== right.matrix.length) {
            throw new Error('Matrices do not have the same number of rows.');
        }
        const joinedMatrix = left.matrix.map((row, index) => {
            return [...row, ...right.matrix[index]];
        });
        return new BoardPart(joinedMatrix);
    }

    static joinVertically(top: BoardPart, bottom: BoardPart): BoardPart {
        if (top.matrix[0].length !== bottom.matrix[0].length) {
            throw new Error('Matrices do not have the same number of columns.');
        }
        const joinedMatrix = [...top.matrix, ...bottom.matrix];
        return new BoardPart(joinedMatrix);
    }
    
}

export const BOARD_BOX = [
    [new BoardPart(map1A), new BoardPart(map1B)],
    [new BoardPart(map2A), new BoardPart(map2B)],
    [new BoardPart(map3A), new BoardPart(map3B)],
    [new BoardPart(map4A), new BoardPart(map4B)],
]